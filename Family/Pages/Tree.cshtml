@page
@model Family.Pages.TreeModel
<partial name="_Vdn" model="Model.vdn" />
<h1>Tree</h1>
<div>
  <h2>Members</h2>
  <div class="members">
    @foreach (var member in Model.Members) {
    <div id="id@(member.Id)" draggable="true" onclick="add(this)">
      @member.DisplayName
    </div>
    }
  </div>
</div>
<div>
  <h2>@Model.Tree?.Title</h2>
  <a href="javascript:save()" class="btn">Save</a>
  <div id="tree" ondragover="over(event)" ondrop="drop(event)" data-id="@Model.Tree?.Id"></div>
</div>

@section css {
<style>
  #tree{border:1px solid orange; position:relative; width:800px; height:400px;}
  div.members{display:flex; flex-direction:column; flex-wrap:wrap; height:150px;}
  div.member{width:100px; height:60px; text-align:center; 
    border:1px solid #ddd; position:absolute;}
</style>
}

@section Scripts {
<script>
class Member {
  constructor(x, y, name, itmId, mbrId) {
    this.x = x;
    this.y = y;
    this.name = name;
    this.itmId = itmId;
    this.mbrId = mbrId;
  }
  draw() {
    var tree = document.getElementById('tree');
    
    var div = document.createElement('div');
    div.style.left = this.x+'px';
    div.style.top = this.y+'px';
    div.setAttribute('class', 'member');
    div.setAttribute('draggable', 'true');
    div.setAttribute('ondragstart', 'drag(event)');
    div.setAttribute('ondblclick', 'dblclick(event)');
    div.setAttribute('data-itmId', this.itmId);
    div.setAttribute('data-mbrId', this.mbrId);
    
    var span = document.createElement('span');
    span.innerText = this.name;
    div.appendChild(span);
    tree.appendChild(div);
  }
}
class Api
{
  static dom = "https://localhost:7105/api/tree/";
  ins(treeId, mbrId, x, y) {
    fetch(`${Api.dom}ins`, {
      method:"POST",
      headers:{"Content-Type":"application/json"},
      body:JSON.stringify({
        "TreeId":treeId,
        "MemberId":mbrId,
        "X":x,
        "Y":y
      })
    })
    .then(res => {
      console.log(res.status)
      if (res.ok) {
        console.log(res);
      }
    })
  }
  upd(id, x, y) {
    fetch(`${Api.dom}upd`, {
      method:"POST",
      headers:{ "Content-Type":"application/json" },
      body:JSON.stringify({
        "id":id,
        "x":x,
        "y":y
      })
    })
    .then(function(res) {
      if (res.ok) {
        console.log(res.statusText)
      } else {
        console.log(res.statusText)
      }
    })
  }
}
function add(el) {
  var name = el.innerText;
  var mbrId = el.id.replace("id", "");
  var member = new Member(10, 10, name, 0, mbrId);
  member.draw();
}
function drag(e) {
  var itmId = e.target.attributes["data-itmId"].value;
  console.log("drag itmId: " + itmId);
  e.dataTransfer.setData('text', itmId);
}
function drop(e) {
  var itmId = e.dataTransfer.getData('text');
  console.log("drop itmId: " + itmId);
  var el = document.querySelector('[data-itmId="'+itmId+'"]');
  var rect = document.querySelector('#tree').getBoundingClientRect();
  var y = Math.round(rect.y);
  var x = Math.round(rect.x);
  el.style.left = (e.x - x)+'px';
  el.style.top = (e.y - y)+'px';
}
function dblclick(e) {
  var id = e.target.getAttribute("data-itmId");
  if (id == null)
    id = e.target.parentElement.getAttribute("data-itmId");
  console.log(id);
  if (id > 0)
    window.open("/treeitem?id="+id, "_blank");
}
function over(e) {
  e.preventDefault();
}
function save() {
  var tree = document.getElementById("tree");
  var treeId = tree.getAttribute("data-id");
  treeId = Number(treeId);
  var members = tree.querySelectorAll(".member");
  var arr = [];
  for (var i=0; i<members.length; i++) {
    var itmId = members[i].getAttribute("data-itmId");
    itmId = Number(itmId);
    var mbrId = members[i].getAttribute("data-mbrId");
    mbrId = Number(mbrId);
    var x = members[i].style.left;
    x = Number(x.replace("px", ""))
    var y = members[i].style.top;
    y = Number(y.replace("px", ""))
    if (!itmId)
      itmId = 0;
    var itm = {"id":itmId, "x":x, "y":y};
    arr.push(itm);
    if (itmId == 0)
      api.ins(treeId, mbrId, x, y);
    else
      api.upd(itmId, x, y);
  }
  console.log(arr);
}
var jsn = "";
var api = new Api();
window.onload = () => {
  jsn = @Html.Raw(Model.Json);
  for (var i=0; i<jsn.length; i++) {
    var m = new Member(jsn[i].X, jsn[i].Y, jsn[i].Title, jsn[i].ItmId, jsn[i].MbrId);
    m.draw();
  }
}
</script>
}